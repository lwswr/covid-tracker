{"version":3,"sources":["state.ts","API.ts","SearchForm.tsx","DataSubWindow.tsx","Overview.tsx","Selector.tsx","List.tsx","Graph.tsx","App.tsx","tsHelpers.ts","index.tsx"],"names":["listOptions","reducer","state","event","produce","draft","type","countries","data","Countries","global","Global","countryStatus","search","matchedCountry","find","country","Country","toLowerCase","selectedCountry","selectedList","getSummaryData","a","axios","get","response","getStatusData","Form","styled","motion","form","Input","input","SearchButton","button","SearchForm","submit","React","newSearch","setNewSearch","onSubmit","e","preventDefault","placeholder","value","onChange","target","SubWindow","div","Title","Total","Increase","DataSubWindow","subTitle","total","increase","Container","DataWindowCon","Overview","title","subTitles","TotalConfirmed","NewConfirmed","TotalDeaths","NewDeaths","TotalRecovered","NewRecovered","Select","select","Selector","map","option","key","Table","TableColumn","TableHeaderCountry","TableHeaderOther","TableCountry","TableTotal","TableIncrease","List","list","displayKey","secondaryDisplayKey","item","index","GraphWindow","Graph","chartData","listChoice","graphDates","useMemo","datum","Date","graphData","arr","newArr","i","length","push","getDifference","graphLabel","graphDimensions","labels","datasets","label","borderColor","backgroundColor","height","width","options","scales","yAxes","ticks","beginAtZero","xAxes","time","unit","AllData","OverviewWindow","OverviewTitle","CasesOverviewTitleAndForm","ListAndSelector","App","useReducer","undefined","update","subTitleOptions","useEffect","summaryResponse","console","log","getSummary","statusResponse","getStatus","t","Error","unreachable","className","exit","opacity","initial","y","animate","transition","ease","duration","x","slice","sort","b","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b3bd060.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  SummaryResponse,\n  Country,\n  Global,\n  Status,\n  StatusResponse,\n} from \"./API\";\nimport produce from \"immer\";\n\nexport const listOptions = [\"Cases\", \"Deaths\", \"Recovered\"] as const;\nexport type ListOption = typeof listOptions[number];\n\nexport type State = {\n  countries: Country[];\n  global?: Global;\n  search: string;\n  selectedCountry?: Country;\n  selectedList?: ListOption;\n  countryStatus?: Status[];\n};\n\nexport type Events =\n  | {\n      type: \"data fetched\";\n      data: SummaryResponse;\n    }\n  | {\n      type: \"country status fetched\";\n      data: StatusResponse;\n    }\n  | {\n      type: \"search updated\";\n      search: string;\n    }\n  | {\n      type: \"selected list changed\";\n      selectedList: ListOption;\n    };\n\nexport const initialState = (): State => ({\n  countries: [],\n  global: undefined,\n  search: \"India\",\n  selectedCountry: undefined,\n  selectedList: \"Cases\",\n  countryStatus: undefined,\n});\n\nexport const reducer: React.Reducer<State, Events> = (state, event) =>\n  produce(state, (draft) => {\n    switch (event.type) {\n      case \"data fetched\": {\n        draft.countries = event.data.Countries;\n        draft.global = event.data.Global;\n        break;\n      }\n      case \"country status fetched\": {\n        draft.countryStatus = event.data;\n        break;\n      }\n      case \"search updated\": {\n        draft.search = event.search;\n        const matchedCountry = draft.countries.find(\n          (country) =>\n            country.Country.toLowerCase() === event.search.toLowerCase()\n        );\n        if (matchedCountry) {\n          draft.selectedCountry = matchedCountry;\n        }\n        break;\n      }\n      case \"selected list changed\": {\n        draft.selectedList = event.selectedList;\n        break;\n      }\n    }\n  });\n","import axios from \"axios\";\n\n// Types from getSummaryData\nexport type SummaryResponse = {\n  Global?: Global;\n  Countries: Country[];\n};\n\nexport type Global = {\n  NewConfirmed: number;\n  TotalConfirmed: number;\n  NewDeaths: number;\n  TotalDeaths: number;\n  NewRecovered: number;\n  TotalRecovered: number;\n};\n\nexport type Country = {\n  Country: string;\n  CountryCode: string;\n  Slug: string;\n  NewConfirmed: number;\n  TotalConfirmed: number;\n  NewDeaths: number;\n  TotalDeaths: number;\n  NewRecovered: number;\n  TotalRecovered: number;\n  Date: string;\n};\n\nexport type StatusResponse = Status[];\n\nexport type Status = {\n  Country: string;\n  CountryCode: string;\n  Province: string;\n  City: string;\n  CityCode: string;\n  Lat: string;\n  Lon: string;\n  Confirmed: number;\n  Deaths: number;\n  Recovered: number;\n  Date: string;\n};\n\nexport const getSummaryData = async () => {\n  const response = await axios.get<SummaryResponse>(\n    `https://api.covid19api.com/summary`\n  );\n  return response.data;\n};\n\nexport const getStatusData = async (country: string | undefined) => {\n  const response = await axios.get<StatusResponse>(\n    `https://api.covid19api.com/total/dayone/country/${country}`\n  );\n  return response.data;\n};\n\n// https://api.covid19api.com/country/south-africa/status/confirmed/live?from=2020-03-01T00:00:00Z&to=2020-04-01T00:00:00Z\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nconst Form = styled(motion.form)`\n  display: flex;\n  flex-direction: row;\n  padding: 10px 20px;\n`;\n\nconst Input = styled(motion.input)`\n  font-size: 25px;\n  border-top: 0;\n  border-left: 0;\n  border-right: 0;\n  border-bottom: 1px solid lightgrey;\n  background: white;\n  color: black;\n  margin-right: 10px;\n  font-family: \"Montserrat\", sans-serif;\n`;\n\nconst SearchButton = styled(motion.button)`\n  font-size: 25px;\n  border: 0;\n  border-bottom: 1px solid white;\n  background: white;\n  color: black;\n  font-family: \"Montserrat\", sans-serif;\n  transition: 0.2s;\n  :hover {\n    border-bottom: 1px solid grey;\n  }\n`;\n\nexport const SearchForm = ({\n  submit,\n}: {\n  submit: (search: string) => void;\n}) => {\n  const [newSearch, setNewSearch] = React.useState(\"India\");\n  return (\n    <Form\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (newSearch !== \"\") submit(newSearch);\n      }}\n    >\n      <Input\n        type=\"text\"\n        placeholder=\"Search...\"\n        value={newSearch}\n        onChange={(e) => setNewSearch(e.target.value)}\n      />\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </Form>\n  );\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst SubWindow = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  padding: 10px 10px 10px 30px;\n  width: 33%;\n  height: 75px;\n  :nth-child(n + 2) {\n    border-left: 1px solid lightgrey;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 15px;\n`;\n\nconst Total = styled.div`\n  font-size: 25px;\n`;\nconst Increase = styled.div`\n  font-size: 20px;\n`;\n\nexport const DataSubWindow = ({\n  subTitle,\n  total,\n  increase,\n}: {\n  subTitle: string;\n  total: number | undefined;\n  increase: number | undefined;\n}) => {\n  return (\n    <SubWindow>\n      <Title>\n        <strong>{subTitle}</strong>\n      </Title>\n      <Total>{total}</Total>\n      <Increase>+{increase}</Increase>\n    </SubWindow>\n  );\n};\n","import * as React from \"react\";\nimport { Country, Global } from \"./API\";\nimport styled from \"styled-components\";\nimport { DataSubWindow } from \"./DataSubWindow\";\nimport { motion } from \"framer-motion\";\n\nconst Container = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n\nconst DataWindowCon = styled(motion.div)`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Overview = ({\n  title,\n  subTitles,\n  data,\n}: {\n  title: string | undefined;\n  subTitles: string[];\n  data: Country | Global | undefined;\n}) => {\n  return (\n    <Container>\n      <h2>{title}</h2>\n      <DataWindowCon>\n        <DataSubWindow\n          subTitle={subTitles[0]}\n          total={data?.TotalConfirmed}\n          increase={data?.NewConfirmed}\n        />\n        <DataSubWindow\n          subTitle={subTitles[1]}\n          total={data?.TotalDeaths}\n          increase={data?.NewDeaths}\n        />\n        <DataSubWindow\n          subTitle={subTitles[2]}\n          total={data?.TotalRecovered}\n          increase={data?.NewRecovered}\n        />\n      </DataWindowCon>\n    </Container>\n  );\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Select = styled.select`\n  font-size: 25px;\n  border: 0;\n  border-bottom: 1px solid white;\n  background: white;\n  color: black;\n  font-family: \"Montserrat\", sans-serif;\n  transition: 0.2s;\n  :hover {\n    border-bottom: 1px solid grey;\n  }\n`;\n\nexport function Selector<T extends string>({\n  selectedList,\n  value,\n  onChange,\n}: {\n  selectedList: Readonly<T[]>;\n  value: T;\n  onChange: (value: T) => void;\n}) {\n  return (\n    <Select\n      value={value ?? selectedList}\n      onChange={(e) => onChange(e.target.value as any)}\n    >\n      {selectedList.map((option) => {\n        return (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        );\n      })}\n    </Select>\n  );\n}\n","import * as React from \"react\";\nimport { Country } from \"./API\";\nimport styled from \"styled-components\";\nimport { ListOption } from \"./state\";\nimport { motion } from \"framer-motion\";\n\nconst Table = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  width: 100%;\n`;\n\nconst TableColumn = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px 0px;\n  :nth-child(n + 2) {\n    border-top: 1px solid lightgrey;\n  }\n`;\n\nconst TableHeaderCountry = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  font-size: 15px;\n  padding-right: 10px;\n  width: 33%;\n`;\n\nconst TableHeaderOther = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  font-size: 15px;\n  padding-right: 10px;\n  width: 33%;\n`;\n\nconst TableCountry = styled.div`\n  font-size: 15px;\n  padding-right: 10px;\n  width: 33%;\n`;\nconst TableTotal = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  font-size: 15px;\n  padding-right: 10px;\n  width: 33%;\n`;\nconst TableIncrease = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  font-size: 15px;\n  padding-right: 10px;\n  width: 33%;\n`;\n\nexport const List = ({\n  list,\n  displayKey,\n  secondaryDisplayKey,\n  selectedList,\n}: {\n  list: Country[];\n  displayKey: keyof Country;\n  secondaryDisplayKey: keyof Country;\n  selectedList: ListOption;\n}) => {\n  return (\n    <Table>\n      <TableColumn>\n        <TableHeaderCountry>Country</TableHeaderCountry>\n        <TableHeaderOther>Total {selectedList}</TableHeaderOther>\n        <TableHeaderOther>Increase in {selectedList}</TableHeaderOther>\n      </TableColumn>\n      {list.map((item, index) => {\n        return (\n          <TableColumn key={index}>\n            <TableCountry>{item.Country}</TableCountry>\n            <TableTotal>{item[displayKey]}</TableTotal>\n            <TableIncrease>+{item[secondaryDisplayKey]}</TableIncrease>\n          </TableColumn>\n        );\n      })}\n    </Table>\n  );\n};\n","import * as React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { StatusResponse } from \"./API\";\nimport styled from \"styled-components\";\nimport { ListOption } from \"./state\";\nimport { useMemo } from \"react\";\n\ntype GraphDimensions = {\n  height: number;\n  width: number;\n};\n\nconst GraphWindow = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 70%;\n  border: 1px solid grey;\n  padding: 30px;\n  margin: 5px 0px;\n  border-radius: 15px;\n`;\n\nfunction getDifference(arr: number[]) {\n  let newArr: number[] = [];\n  for (let i = 1; i < arr.length - 1; i++) {\n    if (arr[i] - arr[i - 1] >= 0) {\n      newArr.push(arr[i] - arr[i - 1]);\n    }\n  }\n  return newArr;\n}\n\nfunction checkForListType(item: ListOption) {\n  if (item === \"Cases\") {\n    return \"Confirmed\";\n  } else if (item === \"Deaths\") {\n    return item;\n  }\n  return item;\n}\n\nexport const Graph = ({\n  chartData,\n  listChoice,\n}: {\n  chartData: StatusResponse;\n  listChoice: ListOption;\n}) => {\n  const graphDates: string[] = useMemo(\n    () => chartData.map((datum) => datum.Date),\n    [chartData]\n  );\n  const graphData: number[] = getDifference(\n    chartData.map((datum) => datum[checkForListType(listChoice)])\n  );\n  const graphLabel: string = chartData[0].Country + \" New \" + listChoice;\n  const graphDimensions: GraphDimensions = {\n    height: 500,\n    width: 800,\n  };\n\n  return (\n    <GraphWindow>\n      <Line\n        data={{\n          labels: graphDates,\n          datasets: [\n            {\n              label: graphLabel,\n              data: graphData,\n              borderColor: \"rgba(131, 154, 199, 0.8)\",\n              backgroundColor: \"rgba(131, 154, 199, 0.2)\",\n            },\n          ],\n        }}\n        height={graphDimensions.height}\n        width={graphDimensions.width}\n        options={{\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n            xAxes: [\n              {\n                type: \"time\",\n                time: {\n                  unit: \"month\",\n                },\n              },\n            ],\n          },\n        }}\n      />\n    </GraphWindow>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { initialState, listOptions, reducer } from \"./state\";\nimport {\n  getSummaryData,\n  SummaryResponse,\n  Country,\n  StatusResponse,\n  getStatusData,\n} from \"./API\";\nimport { SearchForm } from \"./SearchForm\";\nimport { Overview } from \"./Overview\";\nimport { Selector } from \"./Selector\";\nimport { List } from \"./List\";\nimport { unreachable } from \"./tsHelpers\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Graph } from \"./Graph\";\n\nconst AllData = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: auto;\n  padding-top: 20px;\n  width: 60%;\n`;\n\nconst Title = styled(motion.div)`\n  display: flex;\n  border: 1px solid grey;\n  border-radius: 15px;\n  padding: 30px;\n  margin-bottom: 10px;\n  width: 70%;\n  font-size: 35px;\n  letter-spacing: 4px;\n`;\n\nconst OverviewWindow = styled(motion.div)`\n  border: 1px solid grey;\n  border-radius: 15px;\n  padding: 30px;\n  margin-bottom: 5px;\n  align-content: stretch;\n  width: 70%;\n`;\n\nconst OverviewTitle = styled(motion.div)`\n  font-size: 25px;\n  margin: 5px;\n`;\n\nconst CasesOverviewTitleAndForm = styled(motion.div)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ListAndSelector = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 70%;\n  border: 1px solid grey;\n  padding: 30px;\n  margin: 5px 0px;\n  border-radius: 15px;\n`;\n\ntype DisplayKey = \"TotalDeaths\" | \"TotalConfirmed\" | \"TotalRecovered\";\ntype SecondaryDisplayKey = \"NewDeaths\" | \"NewConfirmed\" | \"NewRecovered\";\n\nfunction App() {\n  const [state, update] = React.useReducer(reducer, initialState());\n  const subTitleOptions: string[] = [\"Cases\", \"Deaths\", \"Recovered\"];\n\n  // getCovidData runs once upon mounting\n  useEffect(() => {\n    async function getSummary() {\n      try {\n        const summaryResponse: SummaryResponse = await getSummaryData();\n        update({ type: \"data fetched\", data: summaryResponse });\n        update({ type: \"search updated\", search: \"India\" });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getSummary();\n  }, []);\n\n  // getCountryStatusData runs when state.search is updated\n  useEffect(() => {\n    async function getStatus(country: string | undefined) {\n      try {\n        const statusResponse: StatusResponse = await getStatusData(country);\n        update({ type: \"country status fetched\", data: statusResponse });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (state.search) getStatus(state.search);\n  }, [state.search]);\n\n  // Takes sorting parameter as string allowing for one function to sort all\n  const sortCountries = (countries: Country[], key: DisplayKey) => {\n    return countries\n      .slice(0)\n      .sort((a, b) => {\n        return b[key] - a[key];\n      })\n      .slice(0, 10);\n  };\n\n  //\n  const [displayKey, secondaryDisplayKey] = React.useMemo(():\n    | [DisplayKey, SecondaryDisplayKey]\n    | [undefined, undefined] => {\n    if (state.selectedList) {\n      switch (state.selectedList) {\n        case \"Cases\": {\n          return [\"TotalConfirmed\", \"NewConfirmed\"];\n        }\n        case \"Deaths\": {\n          return [\"TotalDeaths\", \"NewDeaths\"];\n        }\n        case \"Recovered\": {\n          return [\"TotalRecovered\", \"NewRecovered\"];\n        }\n        default: {\n          unreachable(state.selectedList);\n        }\n      }\n    }\n    return [undefined, undefined];\n  }, [state.selectedList]);\n\n  if (\n    !state.global ||\n    !state.countries ||\n    !state.selectedList ||\n    !state.countryStatus\n  )\n    return <div>loading...</div>;\n\n  return (\n    <div className=\"App\">\n      <AnimatePresence>\n        <AllData>\n          <Title\n            exit={{ opacity: 0 }}\n            initial={{ opacity: 0, y: \"-20px\" }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ ease: \"easeOut\", duration: 2 }}\n          >\n            COVID-19 TRACKER\n          </Title>\n          <OverviewWindow\n            exit={{ opacity: 0 }}\n            initial={{ opacity: 0, x: \"-100px\" }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ ease: \"easeOut\", duration: 2 }}\n          >\n            <CasesOverviewTitleAndForm>\n              <OverviewTitle>COVID-19 Overview</OverviewTitle>\n              <SearchForm\n                submit={(search) =>\n                  void update({ type: \"search updated\", search: search })\n                }\n              />\n            </CasesOverviewTitleAndForm>\n\n            {state.global ? (\n              <Overview\n                title={\"Global\"}\n                subTitles={subTitleOptions}\n                data={state.global}\n              />\n            ) : null}\n            {state.selectedCountry ? (\n              <Overview\n                title={state.selectedCountry?.Country}\n                subTitles={subTitleOptions}\n                data={state.selectedCountry}\n              />\n            ) : null}\n          </OverviewWindow>\n\n          <ListAndSelector\n            exit={{ opacity: 0 }}\n            initial={{ opacity: 0, x: \"100px\" }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ ease: \"easeOut\", duration: 2 }}\n          >\n            <Selector\n              onChange={(list) => {\n                void update({\n                  type: \"selected list changed\",\n                  selectedList: list,\n                });\n              }}\n              selectedList={listOptions}\n              value={state.selectedList}\n            />\n            <List\n              list={sortCountries(state.countries, displayKey!)}\n              selectedList={state.selectedList}\n              displayKey={displayKey!}\n              secondaryDisplayKey={secondaryDisplayKey!}\n            />\n          </ListAndSelector>\n          <Graph\n            chartData={state.countryStatus}\n            listChoice={state.selectedList}\n          />\n        </AllData>\n      </AnimatePresence>\n    </div>\n  );\n}\n\nexport default App;\n","export function unreachable(t: never) {\n  throw new Error(\"unreachable \" + t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}